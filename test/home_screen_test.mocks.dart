// Mocks generated by Mockito 5.4.2 from annotations
// in fv1/test/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fv1/models/progress.dart' as _i4;
import 'package:fv1/models/teaching.dart' as _i5;
import 'package:fv1/services/data/data_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AbstractDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbstractDataService extends _i1.Mock
    implements _i2.AbstractDataService {
  @override
  _i3.Future<List<_i4.ProgressModel>> loadProgresses() => (super.noSuchMethod(
        Invocation.method(
          #loadProgresses,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.ProgressModel>>.value(<_i4.ProgressModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.ProgressModel>>.value(<_i4.ProgressModel>[]),
      ) as _i3.Future<List<_i4.ProgressModel>>);
  @override
  _i3.Future<List<_i5.TeachingModel>> loadNewTeachings() => (super.noSuchMethod(
        Invocation.method(
          #loadNewTeachings,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.TeachingModel>>.value(<_i5.TeachingModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.TeachingModel>>.value(<_i5.TeachingModel>[]),
      ) as _i3.Future<List<_i5.TeachingModel>>);
}
