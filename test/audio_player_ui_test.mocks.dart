// Mocks generated by Mockito 5.4.2 from annotations
// in fv1/test/audio_player_ui_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fv1/services/audio_player/audio_player.dart' as _i2;
import 'package:fv1/services/audio_player/player_stream_data.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppAudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppAudioPlayer extends _i1.Mock implements _i2.AppAudioPlayer {
  @override
  set dataStream(_i3.Stream<_i4.PlayerStreamData>? _dataStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataStream,
          _dataStream,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> loadAndPlay(String? url) => (super.noSuchMethod(
        Invocation.method(
          #loadAndPlay,
          [url],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void play() => super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pause() => super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void seek(Duration? position) => super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void onPlayerUnmounted() => super.noSuchMethod(
        Invocation.method(
          #onPlayerUnmounted,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
